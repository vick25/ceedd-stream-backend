# Generated by Django 5.2.6 on 2025-09-30 14:00

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bailleur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=255)),
                ('prenom', models.CharField(blank=True, max_length=255)),
                ('sexe', models.CharField(blank=True, choices=[('M', 'Masculin'), ('F', 'FÃ©minin')], max_length=1)),
                ('avenue', models.CharField(blank=True, max_length=255)),
                ('quartier', models.CharField(blank=True, max_length=255)),
                ('commune', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entite_type', models.CharField(choices=[('infrastructure', 'Infrastructure'), ('bailleur', 'Bailleur'), ('zone_contributive', 'Zone contributive'), ('inspection', 'Inspection')], max_length=50)),
                ('entite_id', models.IntegerField()),
                ('url', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('date_prise', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('contributeur', 'Contributeur'), ('lecteur', 'Lecteur')], max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeInfrastructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, unique=True)),
                ('symbole', models.BinaryField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ZoneContributive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('superficie', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('etat_ravin', models.CharField(blank=True, choices=[('actif', 'Actif'), ('stable', 'Stable')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('shapefile_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Infrastructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=255)),
                ('capacite', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('unite', models.CharField(blank=True, max_length=20)),
                ('date_construction', models.DateField(blank=True, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ceedd_stream.client')),
                ('type_infrastructure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ceedd_stream.typeinfrastructure')),
                ('zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ceedd_stream.zonecontributive')),
            ],
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('etat', models.CharField(choices=[('bon', 'Bon'), ('moyen', 'Moyen'), ('mauvais', 'Mauvais')], max_length=50)),
                ('inspecteur', models.CharField(blank=True, max_length=255)),
                ('commentaire', models.TextField(blank=True)),
                ('prochain_controle', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('infrastructure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='ceedd_stream.infrastructure')),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('mot_de_passe', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ceedd_stream.role')),
            ],
        ),
        migrations.CreateModel(
            name='Finance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_financement', models.DateTimeField(default=django.utils.timezone.now)),
                ('montant', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('bailleur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finances', to='ceedd_stream.bailleur')),
                ('infrastructure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ceedd_stream.infrastructure')),
            ],
            options={
                'unique_together': {('bailleur', 'infrastructure')},
            },
        ),
    ]
